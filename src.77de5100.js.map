{"version":3,"sources":["ts/importFile.ts","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/buffer/index.js","../node_modules/process/browser.js","/home/solarch/plotly/webgl/plotly.js/node_modules/@plotly/point-cluster/index.js","ts/illustrations.ts","index.ts"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask"],"mappings":"ACAA,ACAA,ACAA;AFCA,ACAA,ACAA,AEDA;AJEA,AGFA,AFEA,ACAA,AEDA,IAAIA,OAAO,GAAGC,MAAM,CAACC,OAAO,GAAG,CAAC,CAAC;AJEjC,AGFA,AFEA,ACAA;AFCA,AGFA,AFEA,ACAA,AEDA,ACHA;ALKA,AGFA,AFEA,ACAA,AEDA,ACHA,AEDA,ARAA,SAAA,cAAA,CAA+B,aAA+B,EAAA;ACM9D,AGFA,AFEA,AGDA,ACHA,AEDA,ERAI,EQAJ,ERAU,KAAK,GAAG,EQAlB,GAAA,GRA0B,CAAC,GQA3B,CAAA,SRAwC,CAAC,OQAzC,CAAA,URA2D,CAAqB;ACMhF,AGFA,AFEA,AGDA,AGJA,ERAI,KAAK,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAS,GAAG,EAAA;ACMjD,AGFA,AFEA,AMLA,IAAA,ARAQ,IAAM,MAAM,GAAI,EQAxB,CRA2B,CAAC,CQA5B,KRAuD,CAAC,CQAxD,CAAA,GRA8D,CAAC,CAAC,CAAC,cQAjE,CAAA;APMA,AGFA,AFEA,AGDA,AGJA,IHIIC,ALJI,IAAM,KAAK,GAAG,IKIF,ALJM,KAAK,EAAE;ACMjC,AGFA,AFEA,AGDA,AGJA,ADHA,IFOIC,ALHI,KAAK,CAAC,MAAM,GAAG,GKGD,SLHC;ACKvB,AGFA,AFEA,AGAA,AGLA,ADHA,ICGI,ADHJ,EPIY,GKIHC,MGLM,GAAG,CRCO,COJzB,API0B,GOJ1B,API6B,EKIJA,CAAA,AGLC,ARCM,CQDL,CHKC,ILJU,CAAC,KOJvC,API4C,COJ5C,API6C,CQDL,CAAmB,IRCR,COJnD,APIoD,COJpD,MCGuE,CAAC,SDHxE,CAAA,CAAA;ANSA,AGFA,AFEA,AMJA,ADHA,EFOI,EGJA,ADHJ,EPGY,EKIF,IAAIC,GGJC,ADHf,APGqB,CAAC,CKIH,CAAC,AGJF,ADHlB,EPGiE,CAAC,KQAxC,CAAC,IDH3B,YCG2C,ADH3C,CCG8D,OHIT,CAAC,UGJ0B,CAAC;APKjF,AGFA,AFEA,AGAA,AGJA,EDKI,ECLA,ARAI,CAAC,KQAC,CDKN,ECLS,QAAQ,CAAC,ADKlB,CAAA,EAAA,aCLkC,CAAmB,YAAY,CAAC;APKtE,AGFA,AFEA,AGAA,AGJA,IAAI,ADKI,APLA,IOKI,CFDHC,AECI,APLA,CAAC,CQAH,GAAG,GRAO,EOKE,CPLC,EQAF,ADKI,CCLH,ADKI,KFDCA,CAAA,EAAI,CLJR,OQAe,ADKI,CCLe,CDKb,YCL0B,CAAC,GDKX,EAAE,gBAAgB,EAAE,gBAAgB,CAAC;ANAlG,AGFA,AFEA,AMJA,EHII,EGJA,ADKI,EPLI,EKIF,AECE,CAAC,GFDCD,CLJK,CAAC,GKID,ALJI,CKIH,AECE,APLE,GOKC,CCLH,ADKI,GCLD,EDKM,EAAE,ICLA,CAAC,EDKM,EAAE,EPLI,CAAC,GOKC,EAAE,ICLA,CAAmB,EHId,AECE,CFDD,AECE,uBCLqC,CAAC;APKhG,AGFA,AFEA,AGAA,AGJA,IAAI,ADMI,APNA,CAAC,GOMG,CAAC,MCNE,GAAG,QAAQ,ADMI,CCNH,EDMM,cCNU,CAAmB,iBAAiB,CAAC;APKhF,AGFA,AFEA,AGAC,AGJD,IAAI,ARAI,EOMI,IPNE,CAAC,EKIF,CLJK,CAAC,EQAF,GAAG,ADMM,EAAE,MCNA,CAAC,CRAK,CAAC,KAAK,CAAC,GAAG,CAAC,CQAH,CAAmB,kBAAkB,CAAC;APKhF,AGFA,AFEA,AMJA,EHII,EGJA,ARAI,COMC,CFFD,GLJK,CAAC,GAAG,GAAG,MAAM,CAAC,GQAD,ARAI,CAAC,EQAF,QAAQ,CAAC,IRAQ,CAAC,MAAM,CAAC,IQAA,CAAmB,4BAA4B,CAAC;APKtG,AGFA,AFEA,AMHA,ERDI,CAAC,CKIG,AGHJ,ADMI,CPPD,GKIK,AEGA,CAAC,CPPD,CAAC,IKIME,MGHE,GAAG,CHGK,KAAK,EGHF,ADMI,CCNH,EDMM,KFHK,EAAE,OGHG,CAAmB,wBAAwB,CAAC;API7F,AGFA,AFEA,AMHA,ARDA,IQCI,EHGQL,AEGA,KAAK,EAAE,ECNJ,GAAG,IHGU,GAAGK,CGHL,CAAC,QHGc,QGHE,CAAmB,kBAAkB,CAAC;APIjF,AGFA,AFEA,AMHA,ARlBA,IKqBQ,AGHJ,CHGK,ELrBT,COuBqB,APvBrB,GKqBe,EEEW,EAAE,CCLZ,ADKa,CAAC,ECLX,ADKa,CAAC,EPvBjC,GAAA,EQkB2B,CAAC,WRlB5B,KQkB4C,CAAmB,mBAAmB,CAAC;APInF,AGFA,AFEA,AMHA,ARAA,IQAI,EHGQL,AECsB,CAAE,EPJpC,SAAA,CAAmB,GKGS,GAAGE,ALH+B,EAAA,CQAlC,GAAG,QAAQ,CAAC,CHGO,eGHS,CAAmB,gCAAgC,CAAC;API5G,AGFA,AFEA,AMHA,ERAI,EKGI,AGHJ,EDIQ,APJJ,KOIS,EAAE,EPJF,GAAG,GAAG,CQAD,GAAG,QAAQ,CAAC,aAAa,CAAmB,wBAAwB,CAAC;API3F,AGFA,AFEA,AMHA,EHGI,ALHA,CKGC,CAAC,AGHF,ERAI,EOGa,GFARI,CAAC,CEAY,CFAV,AGHF,CDGc,CAAC,APHX,CQAD,ADGa,EAAE,APHX,COGY,EPHT,GQAC,CAAC,aAAa,CAAmB,OAAO,CAAC;APIlE,AGFA,AFEA,AMFA,ERDI,EKGIN,EED0B,APF1B,KAAK,EAAE,MAAM,CKGG,GAAGE,gBAAgB;AJC3C,AGFA,AFEA,AMFA,EHEI,ALHA,EQCA,CDCK,CPFD,SQCO,GAAG,ERDI,EQCA,ERDI,MAAM,EAAE,KQCZ,CAAA,WAAW,EAAE;APGnC,AGFA,AFEA,AMDA,EHCI,EEAI,APJ4B,EKI5B,EEAI,CAAC,0BAA0B,GAAG;ANC1C,AGFA,AFEA,AMAA,IHAQ,ALJA,EOII,EFAA,CGAZ,ARJa,EOII,CPJD,CQIhB,ADAmB,CCAnB,CHAmBK,CGAnB,ERJsB,CAAC,QKIQ,ILJI,CKIC,UAAU,EAAE;AJChD,AGFA,AFEA,EMAI,ERJI,EKIIN,EEDS,EPHP,GOGY,APHT,CQIb,CAAA,ADDwB,CAAC,CAAC,EAAE,APHT,CAAC,COGU,GFCJ,AEDO,GFCJM,EGAf,CAAC,GRJkB,MKIQ,IGAZ,CAAC;APClC,AGFA,AFEA,EMCI,CRLG,CKIC,CAAC,CEF6B,GPFzB,EKIE,EGCC,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAA;APA3C,AGFA,AFEA,IMCQ,ARNO,COGN,CFEGN,aGCW,EAAE,GHDK,GAAGG,mBAAmB;AJCpD,AGFA,AFEA,EMCI,ADHA,CCGC,CHDG,AGCF,ARNE,KAAK,GAAG,MAAM,CAAC,UAAU;ACMjC,AGFA,AFEA,EGAI,AECA,CFDC,CAAC,ALLE,MAAM,CKKDE,CAAC,CECV,APNa,CKKD,AECZ,KPNmB,CAAC,GOMpB,CAAA,OPN+B,EQOtB,CAAC,EAAA,GDDK,GAAf,YAAA;ANAJ,AGFA,AFEA,IGAQL,AGEA,ADDA,IAAM,OCCK,CAAC,CAAC,CAAC,CAAC,EDDI,CFDD,EECoB,CFDjBG,AECkB,CAAC,IAAI,CAAC,EAAE,CAAC,CCCjB,CAAC,EDDoB,CAAC,EAAE,CAAC,CCCjB,CHFC,CGEC,CDDmB,CAAC,CAAC,SCCrB;APDjD,AGFA,AFEA,EGAI,ALJA,EOKI,ECCI,EDDE,eCCe,ADDA,CCCC,CAAC,CAAC,ADDO,CCCN,ADDO,CAAC,ICCH,ADDO,CAAC,ECCL,ADDO,CAAC,IAAI,CAAC,EAAE,CAAC,ECCL,CAAC,CAAC,ADDO,CCCN,ADDO,CCCN,ADDO,KCCF;APD7D,AGFA,AFEA,AGAA,CAAC,CLJG,EKIA,AEEI,ECAI,ARNJ,EOMI,GPNC,CQMK,EAAE,ARNJ,EOMI,GAAG,CPND,COMG,CPND;ACKxB,AGFA,AFEA,AGAA,IGEQ,ADAA,APNA,CQMC,EAAE,CRNC,CKIHI,AEEI,GCAG,CAAC,ADAA,APNA,COMC,EPNE,COMC,CAAC,CFFHA,CAACC,AEEI,CAAC,EFFF,CEEK,CFFH,ALJI,EAAE,UOMU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;ANDvD,AGFA,AFEA,EGAI,AGEA,CAAC,GHFGT,AEEI,APNA,MAAM,EOME,CAAC,APNA,IOMI,CAAC,CPNC,CKIH,GLJO,EKIFK,OLJW,GKID,ALJI,EKIF,GLJO,CAAC;ACKjD,AGFA,AFEA,EMJI,EHII,ELJI,CQAH,CDMO,CAAC,ECNJ,ADMM,APNF,CQAH,ERAM,CQAH,CAAC,EAAE,CAAC,GAAG,CRAK,GOMK,CAAC,CAAC,CAAC,ICNF,CAAC,MAAM,EAAE,CAAC,EAAE,EAAA;APK/C,AGFA,AFEA,IGAQ,IEEQ,CAAC,EFFFA,AEEI,CCPN,CAAC,CAAA,OHKW,CAACI,EEEM,CFFH,AEEI,CAAC,CFFH,AEEI,CFFH,CAAC;AJCjC,AGFA,AFEA,EGAI,CLJC,KOMW,CPNL,GOMS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;ANDvC,AGFA,AFEA,EGAI,AGFC,ERFG,IOMQ,APNJ,IOMQ,EAAE,APNJ,GAAG,UAAU,EAAE;ACKjC,AGFA,AFEA,EGAI,IAAI,ALJI,CKIHT,GECe,CPLP,GAAG,COKS,EAAE,EPLN,IKIA,ALJI,EOKU,GFDTE,KGDjB,ARH0B,CQGzB,EAAA,ARH4B,MAAM,CAAC,CKIH,IAAI,CAACF,gBAAgB,KAAKK,UAAU,EAAE;AJCpF,AGFA,AFEA,IGAQL,AGDA,ERHI,IQGE,ADC2B,CCD1B,CAAC,ARHE,CQGD,CAAC,CDC4B,APJzB,EOI2B,GFAxB,CEA4B,CAAC,CFA1BK,ELJI,KQGG,CAAC,CDC4B,CFA1B,AEA2B,CAAC,ICDvB,EAAE,YAAA;APE5C,AGFA,AFEA,IGAQ,EGDI,EDAsD,CAAE,EFCrDA,MGDQ,CAAC,CAAC,CAAC,CHCD,AGDE,CHCDI,GAAG,CGDG,CHCD,CAAC,CAAC,AGDE,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK;APElD,AGFA,AFEA,EGAI,IGDQ,EDAI,ICAE,ADAE,ECAA,ADAE;ANEtB,AGFA,AFEA,EGAI,ALHA,EQEI,CAAC,CHCD,ALHE,CQEC,ADAE,CAAC,ICAE,ARFA,CQEC,ERFE,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAsB;ACI3E,AGFA,AFEA,EMDI,ARFA,CQEC,CHCG,ELHE,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;ACI3C,AGFA,AFEA,EMPI,ARIA,EKGI,AEAA,EPHE,CQJD,IHOMT,AGPF,CAAC,CRIG,EQJA,CAAC,ARIE,EQJA,CAAC,CDOb,CAAA,CCPgB,ERII,CAAC,EKGE,CAACS,AGPF,ADOhB,CCPiB,ADOhB,EFAoB,EAAE,CAAC,CAAC,AGPF,CDOf,CCPiB,ADOhB,CCPiB,CRIG,CQJD,ARIE,EQJF,EDOZ,EAAE,QAAQ,CPHmB,COGjB,APHuC,IOGnC,CAAC,uBAAuB,EAAE,IAAI,CAAC,iBAAiB,CAAC;ANC/F,AGFA,AFEA,EGAI,AEAA,APHA,CKGC,AEAA,CFAC,ELHI,KKGEH,CAAC,AGRA,CAAC,CHQA,AGRA,ARKI,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;ACI5C,AGFA,AFEA,EKCI,APHA,EKEI,IAAI,ALFF,CAAC,IOGP,CAAA,APHY,GAAG,KAAK,COGpB,CAAA,kBAAkB,GAAlB,YAAA;ANAJ,AGFA,AFEA,EMLK,ARGD,EOGI,EFDI,EECE,APHJ,CAAC,MAAM,GAAG,GOGO,GAAmB,APHpB,COGqB,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;ANA9E,AGFA,AFEA,EFFI,EOGI,EFDI,EECE,CPHF,CAAC,GKEMN,MLFG,CAAC,GOGM,GAAU,APHV,COGW,CAAC,APHV,CKEI,ALFH,CKEIU,CLFF,COGW,APHV,CQFtB,ADKiC,CFDN,AGJ1B,AREuB,CKEI,AECO,CCLlC,ADKmC,GFDJ,ALFH,COGW,CFDND,AECO,APHV,EOGY,CFDN,AECO,EFDL,CAAC,ALFH,CKEI,AECO,APHV,COGW,EAAE,CAAC,IAAI,CAAC,CAAC;ANAvE,AGFA,AFEA,EFFI,EKEI,AGJA,ADMA,CFFC,CAAC,EEEE,CPJD,CAAC,CQFG,CAAC,CHIAH,AGJC,CHIA,AGJC,CAAC,AREF,CKEC,AEEE,EPJA,COIG,EAAE,EPJA,QQFU,CAAC,OAAO,EAAE,YAAA;APK7C,AGFA,AFEA,EFFI,EOII,EFFI,AGJA,GDMC,APJF,CAAC,GOIK,CAAC,EPJA,COIG,CCNG,ADMF,CCNG,AREJ,CQFK,ADMF,CCNG,ADMF,CCNG,EDMA,CPJD,EQFM,GAAG,OAAO,ADMF,CCNG,ADMF,CCNG,CAAC,CAAC,GDMC,ECNI,ADMF,CAAC,EAAE,EAAE;ANDvD,AGFA,AFEA,EFFI,IKEQ,AGJA,ADMA,IPJC,CAAC,CQFI,CHICN,CGJC,ADMA,CAAC,IAAI,CAAC,APJH,CAAC,MAAM,EKEK,ALFH,CKEIU,ALFH,EAAE,CAAC,CKEI,CAAC,ALFH,IKEO,CLFF,CKEID,CLFF,EKEK,EAAE,CAAC,CAAC,ALFH,CAAC;ACGpD,AGFA,AFEA,AFFA,IKEQ,AGJA,CAAC,EAAE,CDMK,CAAC,EAAE,CCNH,CAAC,aDMiB,CAAC,CAAC,CAAC;ANDrC,AGFA,AFEA,EGAI,AGJA,CAAC,KDMW,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC;ANDnC,AGFA,AFEA,AGEA,EGZI,KAAK,CDYO,GCZH,CAAC,ADYM,EAAE,CCZL,CAAC,EAAE,ADYM,CCZL,ADYM,GCZH,MDYY,CCZL,ADYM,CCZL,ADYM,CAAC,KCZD,EAAE,CAAC,EAAE,EAAA;APW3C,AGFA,AFEA,AGEA,QEAgB,CFAPE,GGbI,ADaO,CCbN,CAAA,ADaQ,UFAEA,CAACC,MAAM,EAAE;AJDjC,AGFA,AFEA,EGEI,IAAIX,IEDgB,KAAK,EAAE,OFCL,CEDa,IFCRM,YAAY,EAAE;AJD7C,AGFA,AFEA,EMRK,EHUG,MEFiC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;ANCjE,AGFA,AFEA,IGEQ,IEH0D,CAAE,EFGrDA,YAAY,CAACK,MAAM,CAAC,EGTtB,CAAC,EAAA;APQd,AGFA,AFEA,EGEI,EGTI,IDMQ,IAAI,EAAE,QCNI,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAA;APQxD,AGFA,AFEA,EGEI,IGTQ,CDMC,CAAC,sBCNsB,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK;APQ3E,AGFA,AFEA,EGEI,IAAI,AGTI,CHSHX,KGTS,EAAE,WHSO,KAAKG,mBAAmB,IAAI,CAACH,kBAAkB,KAAKM,YAAY,EAAE;AJD7F,AGFA,AFEA,IGEQN,AGTA,ADMA,CCNC,EAAE,KAAK,CAAC,ODMT,CAAA,CFGkB,GAAGM,GEHf,CAAC,OAAO,CFGmB,AEHlB,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,0BAA0B,EAAE,IAAI,CAAC,iBAAiB,CAAC;ANEpG,AGFA,AFEA,EMPI,ADMA,CCNC,ADMA,CFGG,OAAOA,YAAY,CAACK,MAAM,CAAC;AJDnC,AGFA,AFEA,EGEI,AGfA,ADaA,KCbK,IAAI,CAAC,CDaV,CAAA,CCba,CAAC,EAAE,CAAC,GAAG,CDapB,CAAA,gBCbsC,CAAC,CDarB,GAAlB,ECb6C,EAAE,CAAC,EAAE,EAAA,CDa/B,OAAiB,EAAA;ANCxC,AGFA,AFEA,EGEI,EEHA,EFGI,EEHJ,ICbS,CAAC,ADaV,CCbU,EDaV,IAAA;ANEJ,AGFA,AFEA,IGEQ,AEHA,IAAI,aAAa,GAA0B,EAAE;ANErD,AGFA,AFEA,EMXK,EHaG,AEHA,IAAI,GFGGX,YEHY,GAAyB,EAAE,CFGrB,CAACW,MAAM,CAAC;AJDzC,AGFA,AFEA,EGEI,AGZA,CHYC,CAAC,AEHE,GCTC,IHYIN,AGZA,ADSE,CFGD,AGZA,ADSE,EFGD,CGZE,CAAC,EAAE,CAAC,ADSE,CAAC,ECTA,QDSA,GCTW,CAAC,GDSL,EAAA,CCTW,EAAE,CAAC,EAAE,EAAE;APWjD,AGFA,AFEA,IGEQ,AGZA,EDSI,EFGA,EEHM,KCTC,CAAC,ADSI,CCTH,CAAC,CAAC,ADSI,OAAO,CAAC,IAAI,ICTA,CAAC,QAAQ,EAAE,YAAA;APWlD,AGFA,AFEA,MGEY,AGZA,ADSA,IAAI,ECTE,EAAE,EDSE,CAAC,MAAM,IAAI,CAAC,EAAE;ANEpC,AGFA,AFEA,IMVQ,CAAC,CHYG,AGZF,EDSM,KFGGL,QEHU,CAAC,IAAI,CAAC,CAAC,GFGC,CAACS,AEHE,CAAC,CAAC,EFGA,CAAC,IAAI,EAAEE,MAAM,CAAC;AJDxD,AGFA,AFEA,IGEQ,CAAC,CAAC,EEHM,KFGCN,CAAC,EAAC,OEHY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;ANE5C,AGFA,AFEA,EMXK,IHaO,EEHI;ANEhB,AGFA,AFEA,EMVI,IHYQ,CGZH,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,sBAAsB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;APW5D,AGFA,AFEA,IMVQ,EHYI,AEFA,IAAI,GFEGL,KEFK,GAAG,EAAE,GCVC,CAAC,CAAC,CAAC,CAAC,CHYG,CAACS,IAAI,CAAC,IAAI,EAAEE,GGZC,CAAC,EHYI,CAAC,KGZG,EAAE,YAAA;APW7D,AGFA,AFEA,IGEQ,EGZI,ADUA,IAAI,ECVE,EAAE,GDUG,GAAa,EAAE;ANCtC,AGFA,AFEA,EGEI,EGZI,CAAC,CAAC,ADUE,IAAI,OAAO,GAAG,EAAE;ANC5B,AGFA,AFEA,AGKA,MELY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;ANCpD,AGFA,AFEA,AGKA,EGhBK,EHgBDC,IELY,CFKP,GAAG,EAAE,EELU,CAAC,IAAI,CAAC;ANC9B,AGFA,AFEA,AGKA,EGfI,EHeAC,MEN4B,CAAC,CFMrB,CENuB,CAAC,CFMrB,AGfG,CAAC,EDSqB,EFMpB,IEN0B,CAAC,MAAM,CCTlB,CAAC,CDSoB,CAAC,CAAC,ICTf,EAAE,YAAA;APW7C,AGFA,ACOA,IAAIC,AGfI,MDQoD,CAAC,EAAE,GFO/C,GEPqD,CAAC,CAAC,CCR5C,CAAC,KAAK,GAAG,aAAc,CAAC,KAAK;APWxD,AGFA,ACOA,IAAIC,AGfI,IDOgE,CAAE,CCP5D,ADO6D,ECP3D,EHeF,GAAG,CAAC,CAAC;AJJnB,AGFA,ACQA,EGhBI,CAAC,EAAE,GDOS,CFSPC,CGhBG,CAAC,IDOU,CAAC,IAAI,CAAC,CAAC,EFSNA,CAAA,CETU,CFSP,KETa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;ANIrD,AGFA,ECQI,AGfA,IHeI,CAACH,CETO,ICND,CAAC,EHeC,AETM,CAAC,GFSH,CAACC,AETM,CAAC,MAAM,CAAC,CCNJ,ADMK,CCNJ,ADMK,CAAC,CFSL,EAAE,GGfI,EAAE,YAAA;APU1C,AGFA,ICQQ,AGfA,IAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAsB;APU/E,AGFA,ECQI,EGfI,EDMI,ECNE,EDME,CAAC,GAAG,ECNE,ADMA,GCNG,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,WAAW,CAAC;APUvE,AGFA,ECQID,EGfI,EDMI,ECNA,EHeA,CETK,EFSF,EETM,CCND,ADME,EFSF,AGfE,CDMG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;ANIpD,AGFA,ECQI,IAAIC,AGfI,EDMI,CAAC,CCNC,ADMA,IAAI,CAAC,GFSH,CAACG,EETQ,CCNC,ADMA,CAAC,CAAC,CFSL,AGfM,EHeJ,AETM,MCNM,ADMA,CCNC,ADMA,CAAC,CAAC,CAAC,UCNU,CAAC,GAAG,CAAC;APU5D,AGFA,ICQQL,EGfI,GHeC,GAAGE,MGfQ,CAAC,KHeG,CAACI,MAAM,AGfE,CHeDN,AGfE,KHeG,CAAC,IGfM,EAAE,QAAQ,CAAC;APU3D,AGFA,ECQI,CAAC,GGfO,ADOA,GFQD,CGfO,ADOF,GAAG,GAAG,CCPG,CDOD,ECPI,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC;APUzD,AGFA,ICQQG,EGfI,ADOA,KAAK,GFQC,CERG,CAAC,CFQD,CAAC,AGfE,CHeD,AGfE,ADOA,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GCPG,CAAC,EDOE,EAAE,CAAC,CCPC,CDOC,CCPC,CDOC,MCPM,CAAC;APUtD,AGFA,ECQI,IGfQ,EDOI,GAAG,CAAC,IAAI,CAAC,CCPD,ADOE,CCPD,ADOE,CAAC,CAAC,CAAC,CAAC,CCPD,ADOE,ECPA;APUhC,AGFA,ECQI,IAAIH,KAAK,CAACK,MAAM,EAAE;AJLtB,AGFA,EIPI,CAAC,CHeGE,AGfF,EDMO,QFSK,EAAE;AJLpB,AGFA,ECQI,AGdA,IDMQ,IAAI,GCND,ADMI,CCNH,EDMM,KAAI,CAAC,OCNI,CDMI,CCNF,ADMG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;ANG7C,AGFA,ACQA,EGdI,IDOQ,IAAI,GCPD,CAAC,GDOO,GAAG,GAAG,CAAC,MAAM,CAAC,CCPH,EAAE,ODOU,CAAC,EAAE,CAAC,EAAA;ANElD,AGFA,ACSA,AGfA,QDMsD,CFS7CA,METoD,CAAC,CAAC,EFS5CA,CAAA,EAAG,CET+C,CAAC,CAAC,CAAC;ANGxE,AGFA,AIJA,EHaI,IAAIN,AEViE,CAAC,CAAC,CCH3E,ADIiB,KFSD,CGbhB,ADIuB,CFSL,AGblB,ADIwB,ECJxB,QDIiC,CAAS,EAAE,CAAS,EAAA;ANGrD,AGFA,EIJI,EHaI,IEViD,OAAO,CAAC,GAAG,CAAC;ANIrE,AGFA,ECSI,IEXkE,CAAC,CAAC;ANKxE,AGFA,ECSI,AGbA,IHaIO,AEVI,GCHD,CAAC,CDGK,EFUF,AGbA,CAAC,CDGK,CFUHb,EEVM,ECHF,CAAC,ADGI,CAAC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AAiB,CAAE;ANI9F,AGFA,ACWA,EEZI,CAAC;ANIL,AGFA,ACWA,EEXI,OFWKU,IAAIA,AEXT,CFWUrB,AEXV,GFWa,EAAEsB,IEXf,CFWoB,AEXpB,EFWsB,MEXd,GAAR,UAAS,CAAa,EAAE,CAAa,EAAA;ANGzC,AGFA,ECWI,EEXI,EFWA,CAACtB,CEXG,EFWA,GAAGA,GAAG,AEXE,GAAG,CAAC,CAAC,MAAM;ANG/B,AGFA,ECWI,IAAI,AEXI,CFWHsB,KAAK,EEXM,CFWHA,EEXM,CAAC,CAAC,CFWH,AEXI,CAAC,CAAC,MAAM;ANGlC,AGFA,ACWA,MEXY;ANGZ,AGFA,ACWAD,IAAI,CAACE,CEXO,QFWE,AEXM,CFWLT,EEXQ,CFWL,AEXM,CAAC,CAAC,CFWL,AEXM,CAAC,MAAM,KFWD;AJRjC,AGFA,AIHA,EHcI,IAAI,AEXI,CFWHd,AEXI,ECHb,CHcY,AEXI,CFWHwB,GEXO,EFWF,CAAC,EEXM,CAAC,CFWH,EAAE,CGdzB,CAAA,EHc6B,AGd7B,CHc8BF,AEXI,CAAC,CAAC,CAAC,EFWF,CAAC;AJRpC,AGFA,ACWA,CAAC,CGdG,EDGI,GCHC,EDGI,ECHA,CAAC,CDGG,CAAC,CCHD,CAAC,CDGG,CCHD,ADGE,CCHD,CDGG,CAAC,CCHD,EDGI,QAAQ,CCHD,CAAC,ADGE,EAAE,CAAC,EAAE,CCHD,EAAE,CAAC,EAAE,EAAE;APMjD,AGFA,ACWAlC,IGdQ,EDGI,CFWL,AEXM,CFWLqC,AEXM,CAAC,CAAC,GFWH,AEXM,GFWH,CEXO,ICHE,CAAC,ADGE,CCHD,ADGE,CCHD,CHcH,AGdI,KAAK,CDGG,CAAC,CCHD,ADGE,CAAC,ECHA;APMxC,AGFA,ACYArC,IGfQ,EDGI,CFYL,CAACsC,GAAG,AEZM,GFYH,CAAC,AGfI,ADGE,CFYL,AGfI,ADGE,CCHD,CAAC,CAAC,ADGE,CAAC,EAAE,CAAC,CCHD,EDGI,CCHD,GAAG,IDGM,EAAE,EAAE,CAAC,EAAE;ANG/C,AGFA,ACYAtC,OAAO,CAACuC,AEZQ,CAAC,CAAC,CAAC,CFYP,AEZQ,CAAC,CAAC,CFYP,AEZQ,EFYN,CEZS,CAAC,CAAC,CAAC;ANG7B,AGFA,ACYAvC,EGhBK,KHgBE,CAACwC,AEZQ,KAAK,EFYN,EEZU,CFYP,AEZQ,EFYN,CAAC,AEZQ,CFYP,AEZQ,EAAE,CAAC,GAAG,QAAQ,EAAE,EAAE,CAAC,EAAE;ANGnD,AGFA,ACYAxC,EGfI,KHeG,AGfE,CHeDyC,EEZY,CCHP,ADGQ,CCHP,ADGQ,CAAC,CAAC,CCHP,ADGQ,CFYT,AGfE,ADGQ,CAAC,CCHP,CHeD,AGfE,CHeD,CAAC,AEZU,CCHP,ADGQ,CAAC,CAAC,CAAC,CAAC,CAAC,CCHP,ADGQ,CCHP,EDGU,CAAC,CAAC,CAAC,CCHP,ADGQ,CAAC,CCHP,ADGQ,CCHP,ADGQ,ECHN,EAAE;APM5C,AGFA,ACaA,IGhBQ,KHgBCC,IAAIA,CAAA,CGhBM,CHgBH,AGhBI,CHgBH,AGhBI,CAAC,CAAC,KAAK,GAAG,GAAG;AJIlC,ACcA1C,IGjBQ,GHiBD,CAAC2C,EAAE,AGjBI,CAAC,CAAC,CHiBHD,AGjBI,CAAC,GHiBD,EGjBM,GAAG,GAAG;AJI7B,ACcA1C,OAAO,CAAC4C,WAAW,GAAGF,IAAI;ADb1B,ACcA1C,EGlBK,EDIG,GFcD,CAAC6C,GEdO,CFcH,AEdI,GFcDH,IAAI;ADbnB,ACcA1C,EGjBI,ADGA,CAAC,IFcE,AGjBE,CHiBD8C,GAAG,AGjBE,CAAC,EHiBAJ,CGjBG,CAAC,EHiBA,AGjBE,CAAC,GAAG,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AJIxD,ACcA1C,EEbI,ECJI,GHiBD,CAAC+C,KEbJ,CAAA,QFakB,CEblB,CAAA,CFaqBL,GGjBO,CHiBH,AGjBI,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,EDItB,GAArB,UAAsB,MAAiB,EAAE,GAAW,EAAA;AHAxD,ACcA1C,IGjBQ,ADGJ,GFcG,CAACgD,AEdJ,KAAA,GAAA,IAAA,ECHsB,CAAC,CAAC,CAAC,CHiBH,AGjBI,GHiBDN,EGjBM,EHiBF,CGjBK,GAAG;AJIzC,ACcA1C,IEdQ,GFcD,CAACiD,AEdI,IFcA,AEdI,GFcDP,AEdI,IFcA,EEdM,CAAC,IAAI;AHC9B,ACcA1C,EGlBK,EDIG,GFcD,CAACkD,AEdI,CAAC,GAAG,MAAM,CAAC,IFcA,CEdK,EFcFR,IAAI;ADb9B,ACcA1C,EGlBI,EDKI,GFaD,CAACmD,AEbI,GAAG,GAAG,IAAI,ECLC,CAAC,EDKG,EAAE,CCLA,CHkBF,EGlBK,CHkBFT,EGlBK,EHkBD;ADblC,ACeA1C,EGnBI,EDKI,GFcD,CAACoD,AEdI,KAAK,ECLC,CAAC,ADKC,CFcH,GAAG,AEdI,CCLA,GAAG,CDKE,ECLC,ADKC,GFcDC,IAAI,EAAE;ADdpC,ECcsC,AGjBlC,EDII,IAAI,CFaiC,EAAE,CEb/B,GAAG,IAAI,KAAK,EAAE;AHA9B,ACagD,CAAC,CGhB7C,EDII,ECJE,EDIE,ICJI,CDIC,ECJE,CDIC,IAAI,GCJG,CAAC,CDIC,EAAE,WCJW,CAAC,UAAU,CAAsB;AJI3E,ACcArD,EGjBI,EDKI,ECLA,CHiBD,CAACsD,AEZI,KCLG,EHiBA,AEZI,CCLD,EHiBA,AEZI,EAAE,ECLA,CAAC,KHiBGD,IAAI,CGjBG,CHiBD,AGjBE,IAAI,CAAC;AJIzC,ECcI,AGjBA,EDKI,ECLA,EHiBE,IAAI/C,AGjBA,GAAG,EHiBE,CAAC,IGjBK,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,GHiBE,CAAC,CGjBE,EAAE,MAAM,CAAC,MAAM,CAAC;AJIzE,ACcA,CAAC,CGhBG,EDII,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;AHD7D,ACeAN,EGjBI,IAAM,ADIE,CFaL,CAACuD,GAAG,EGjBM,ADIE,CFaL,AEbM,ECJA,EDII,CAAC,CAAC,GAAG,CCJD,ADIE,CCJD,CHiBH,CEbO,GAAG,CAAC,QCJM,CAAC,eAAe,CAAsB;AJGjF,ECc4B,AGhBxB,IAAI,ADII,GFYuB,AEZpB,CAAC,CAAC,CFYqB,CGhBvB,CDIK,CAAC,CCJH,EDIM,GAAG,CAAC,CCJH,CAAC,CDIK,IAAI,CAAC,CAAC,GCJD,ADII,CCJH,ADII,CAAC,GCJD,CAAC;AJG1C,ACauC,CAAC,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":"src.77de5100.js","sourceRoot":"../src","sourcesContent":["export function importFileInit(imageRowSlice: HTMLInputElement) {\n    const input = document.querySelector('input[type=file]') as HTMLInputElement;\n    input.addEventListener('change', function(evt) {\n        const source = (evt.target as HTMLInputElement).files![0];\n        const image = new Image();\n\n        image.onload = function() {\n            imageRowSlice.max = String(image.height);\n            drawFrame(this as HTMLImageElement | HTMLVideoElement);\n        }\n        image.onerror = function() {\n            console.log(\"error loading image!\");\n        }\n        window.URL.revokeObjectURL(image.src);\n        image.src = window.URL.createObjectURL(source);\n    }, false);\n}\n\n\nfunction drawFrame(source: HTMLImageElement | HTMLVideoElement) {\n    var MAX_WIDTH = 800;\n    var MAX_HEIGHT = 800;\n    var width, height;\n    if ('naturalWidth' in source) { // Check if source is an HTMLImageElement\n        width = source.naturalWidth;\n        height = source.naturalHeight;\n      } else { // Otherwise, assume source is an HTMLVideoElement\n        width = source.videoWidth;\n        height = source.videoHeight;\n      }\n\n    // Change the resizing logic\n    if (width > height) {\n        if (width > MAX_WIDTH) {\n            height = height * (MAX_WIDTH / width);\n            width = MAX_WIDTH;\n        }\n    } else {\n        if (height > MAX_HEIGHT) {\n            width = width * (MAX_HEIGHT / height);\n            height = MAX_HEIGHT;\n        }\n    }\n\n    const canvas = document.getElementById(\"Mycanvas\") as HTMLCanvasElement;\n    const context = canvas.getContext(\"2d\");\n    const canvas2 = document.getElementById(\"ProcessCanvas\") as HTMLCanvasElement;\n    const context2 = canvas.getContext(\"2d\");\n\n    canvas.width = width;\n    canvas.height = height;\n    context!.drawImage(source, 0, 0, width, height);\n    canvas2.width = width\n    canvas2.height = height;\n    context2!.drawImage(source, 0, 0, width, height);\n}","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict'\n\nmodule.exports = require('./quad')\n","import { Kernel } from \"./kernel\"\n\n// @ts-ignore\nimport Plotly, { PlotlyHTMLElement } from 'plotly.js-dist';\n\nexport class Illustrator {\n    plotColors \n    plotNames \n    plotDefaultConfig\n    plotDefaultKernelLayout\n    plotDefaultFrequencyLayout\n\n\n\n    constructor() {\n        this.plotColors = ['rgb(255, 0, 0)', 'rgb(0, 255, 0)', 'rgb(0, 0, 255)', 'rgb(148,0,211)'];\n        this.plotNames = ['Red', 'Green', 'Blue', 'Alpha'];\n\n        this.plotDefaultConfig = {\n            displayModeBar: false,\n        };\n\n        this.plotDefaultKernelLayout = {\n            xaxis: { range: [0, 1] },\n            yaxis: { range: [0, 1] }\n        };\n\n        this.plotDefaultFrequencyLayout = {\n            yaxis: { range: [-10, 256] }\n        };\n    }\n\n    \n\n    initKernelGraph(){\n        const plotting_data: string | any[] = [[null], [null], [null]];\n        const plotting_labels: any[] = [[null], [null], [null]];\n\n        var plotData = []\n        for (var i = 0; i < plotting_data.length; i++) {\n            plotData.push({\n                x: plotting_labels[i],\n                y: plotting_data[i],\n                name: this.plotNames[i],\n                line: { shape: 'spline', color: this.plotColors[i] },\n                type: 'scatter'\n            });\n        }   \n        \n        Plotly.newPlot('myDiv', plotData, this.plotDefaultKernelLayout, this.plotDefaultConfig);\n    }\n\n    initFrequencyGraph(){\n        const plotting_data: string | any[] = [[null], [null], [null], [null]];\n        const plotting_labels: any[] = [[null], [null], [null], [null]];\n\n        var plotData = []\n        for (var i = 0; i < plotting_data.length; i++) {\n            plotData.push({\n                x: plotting_labels[i],\n                y: plotting_data[i],\n                name: this.plotNames[i],\n                line: { shape: 'spline', color: this.plotColors[i] },\n                type: 'scatter'\n            });\n        }   \n        Plotly.newPlot('myPlot2', plotData, this.plotDefaultFrequencyLayout, this.plotDefaultConfig);\n    }\n\n    generatKernelGraph(kernels: Kernel[]) {\n        var plotting_data: (number[] | null[])[] = [];\n        var plotting_labels: (number[] | null[])[]= [];\n        kernels.forEach(kernel_ => {\n            const kernel = kernel_.self;\n            if (kernel.length == 0) {\n                plotting_data.push([null]);\n                plotting_labels.push([null]);\n                return;\n            }\n\n            var xyValues = [];\n            var xValues: number[] = [];\n            var yValues = [];\n            for (var i = 0; i < kernel.length; i++) {\n                xyValues.push({ x: i / (kernel.length - 1), y: kernel[i] });\n                xValues.push(i / (kernel.length - 1));\n                yValues.push(kernel[i]);\n            }\n            var k = [];\n            for (var i = 0; i < kernel.length; i++) {\n                k.push(kernel[i] / kernel[0]);\n            }\n\n            var k_t = []\n            for (var i = 0; i < k.length; i++) {\n                k_t.push([k[i]])\n            };\n\n            var k_m = this.multiply(k_t, [k]);\n\n            var k_m_sum = k_m.reduce(function(a, b) { return a.concat(b) })\n                .reduce(function(a: number, b: number) { return a + b });\n\n            for (var row = 0; row < k_m.length; row++) {\n                for (var col = 0; col < k_m[0].length; col++) {\n                    k_m[row][col] = k_m[row][col] / k_m_sum;\n                }\n            }\n            plotting_data.push(yValues);\n            plotting_labels.push(xValues);\n        });\n        \n        var plotData = []\n        \n        const allTraces = (document.getElementById('myDiv') as PlotlyHTMLElement).data;\n        const trace = allTraces.filter((trace: Plotly.scatter) => trace.visible === true);\n\n        for (var i = 0; i < plotting_data.length; i++) {\n            let isTraceVisible = true;\n\n            if (trace.length != 0)\n                isTraceVisible = trace.some((trace: Plotly.scatter) => trace.name === this.plotNames[i]);\n\n            plotData.push({\n                x: plotting_labels[i],\n                y: plotting_data[i],\n                name: this.plotNames[i],\n                line: { shape: 'spline', color: this.plotColors[i] },\n                type: 'scatter',\n                visible: isTraceVisible ? true : \"legendonly\"\n            });\n        }\n        \n        Plotly.react('myDiv', plotData, this.plotDefaultKernelLayout, this.plotDefaultConfig );\n    }  \n\n    multiply(a: number[][], b: number[][]) {\n        var aNumRows = a.length,\n            aNumCols = a[0].length,\n            /* bNumRows = b.length, */\n            bNumCols = b[0].length,\n            m = new Array(aNumRows); // initialize array of rows\n        for (var r = 0; r < aNumRows; ++r) {\n            m[r] = new Array(bNumCols); // initialize the current row\n            for (var c = 0; c < bNumCols; ++c) {\n                m[r][c] = 0; // initialize the current cell\n                for (var i = 0; i < aNumCols; ++i) {\n                    m[r][c] += a[r][i] * b[i][c];\n                }\n            }\n        }\n        return m;\n    }\n\n    generatFrequencyGraph(pixels: ImageData, row: number) {\n        var data = pixels.data;\n        var w = pixels.width;\n\n        var red = new Array();\n        var green = new Array();\n        var blue = new Array();\n        var alpha = new Array();\n\n        var xValues = [];\n        //Read image and make changes on the fly as it's read  \n        for (var i = 0 + w * row; i < w * (row + 1); i += 1) {\n            xValues.push(i - w * row);\n            red[i - w * row] = data[i * 4];\n            green[i - w * row] = data[i * 4 + 1];\n            blue[i - w * row] = data[i * 4 + 2]; // no change, blue == 0 for black and for yellow\n            alpha[i - w * row] = data[i * 4 + 3]; // Again, no change\n        }\n\n        var plotData = [];\n        var plotting_data = [red, green, blue, alpha];\n        var plotting_labels = [xValues, xValues, xValues, xValues];\n\n        const allTraces = (document.getElementById('myPlot2') as PlotlyHTMLElement).data;\n        const trace = allTraces.filter((trace: Plotly.scatter) => trace.visible === true);\n\n        for (var i = 0; i < plotting_data.length; i++) {\n            let isTraceVisible = true;\n\n            if (trace.length != 0)\n                isTraceVisible = trace.some((trace: Plotly.scatter) => trace.name === this.plotNames[i]);\n\n            plotData.push({\n                x: plotting_labels[i],\n                y: plotting_data[i],\n                name: this.plotNames[i],\n                line: { color: this.plotColors[i] },\n                type: 'scatter',\n                visible: isTraceVisible ? true : \"legendonly\"\n            });\n        }\n\n        Plotly.react('myPlot2', plotData, this.plotDefaultFrequencyLayout, this.plotDefaultConfig);\n\n        // Write the image back to the canvas\n        for (var i = 0 + w * (row - 1); i < w * row; i += 1) {\n            data[i * 4] = 0;\n            data[i * 4 + 1] = 0;\n            data[i * 4 + 2] = 0;\n            data[i * 4 + 3] = 255;\n        }\n\n        for (var i = 0 + w * (row + 2); i < w * (row + 3); i += 1) {\n            data[i * 4] = 0;\n            data[i * 4 + 1] = 0;\n            data[i * 4 + 2] = 0;\n            data[i * 4 + 3] = 255;\n        }\n    }\n}","// #region imports\nimport { importFileInit } from \"./ts/importFile\"\n/* import { Filter } from \"./ts/filter\";*/\nimport { Illustrator } from \"./ts/illustrations\";  \n// #endregion\n// #region variables\nlet resetButton = document.querySelector<HTMLInputElement>('#reset-all');\n\nlet kernelSizes = document.querySelectorAll<HTMLInputElement>('[id=kernal-size]');\nlet sigmas = document.querySelectorAll<HTMLInputElement>('[id=sigma]');\nlet sigmas2 = document.querySelectorAll<HTMLInputElement>('[id=sigma2]');\nlet timeFiltersApllied = document.querySelectorAll<HTMLInputElement>('[id=time-filter-applied]');\nlet filterTypes = document.querySelectorAll<HTMLInputElement>('[id=filterType]');\nlet imageRowSlice = document.querySelector<HTMLInputElement>('#image-row-slice');\nlet blurOrSharpenCheckboxs = document.querySelectorAll<HTMLInputElement>('[id=blurOrSharpenCheckbox]');\n\nlet kernalSizesValues = document.querySelectorAll<HTMLInputElement>('[id=kernal-size-value]');\nlet sigmaValues = document.querySelectorAll<HTMLInputElement>('[id=sigma-value]');\nlet sigmaValues2 = document.querySelectorAll<HTMLInputElement>('[id=sigma-value2]');\nlet timeFiltersAplliedValues = document.querySelectorAll<HTMLInputElement>('[id=time-filter-applied-value]');\nlet imageRowSliceValue = document.querySelector<HTMLInputElement>('#image-row-slice-value');\nlet saveButton = document.querySelector<HTMLInputElement>('#save');\n\n/* let filter = new Filter();*/\nlet illustrator = new Illustrator();\n \n// #endregion\n\nfunction init() {\n    importFileInit(imageRowSlice!);\n\n    resetButton!.addEventListener(\"click\", function() {\n        resetAllOptions();\n    });\n\n    for (let i = 0; i < kernelSizes.length; i++) {\n        kernelSizes[i].addEventListener('input', function() {\n            kernalSizesValues[i].value = kernelSizes[i].value;\n            update();\n        }, false);\n    };\n\n    for (let i = 0; i < sigmas.length; i++) {\n        sigmas[i].addEventListener('input', function() {\n            sigmaValues[i].value = sigmas[i].value;\n            update();\n        }, false);\n    };\n\n    for (let i = 0; i < sigmas2.length; i++) {\n        sigmas2[i].addEventListener('input', function() {\n            sigmaValues2[i].value = sigmas2[i].value;\n            update();\n        }, false);\n    };\n\n    for (let i = 0; i < timeFiltersApllied.length; i++) {\n        timeFiltersApllied[i].addEventListener('input', function() {\n            timeFiltersAplliedValues[i].value = timeFiltersApllied[i].value;\n            update();\n        }, false);\n    };\n\n    for (let i = 0; i < filterTypes.length; i++) {\n        filterTypes[i].addEventListener(\"change\", () => {\n            update();\n        });\n    };\n\n    for (let i = 0; i < blurOrSharpenCheckboxs.length; i++) {\n        blurOrSharpenCheckboxs[i].addEventListener(\"change\", () => {\n            update();\n        });\n    };\n\n    imageRowSlice!.addEventListener('input', function() {\n        imageRowSliceValue!.value = imageRowSlice!.value;\n        update();\n    }, false);\n\n    saveButton!.addEventListener('click', () => {\n        const canvas = document.getElementById(\"Mycanvas\") as HTMLCanvasElement;\n        const filename = window.prompt('Enter a filename', 'image.png');\n        if (filename) {\n            const downloadLink = document.createElement('a');\n            downloadLink.setAttribute('download', filename);\n            const dataURL = canvas.toDataURL('image/png');\n            downloadLink.setAttribute('href', dataURL);\n            downloadLink.click();\n        }\n    });\n\n    illustrator.initKernelGraph();\n    illustrator.initFrequencyGraph();  \n}\n\n\nfunction update() {\n    /* createKernels();\n    applyKernel();  */\n    console.log(\"hi!!\");\n}\n\n/* function createKernels(){\n    filter.kernels.forEach((kernel, i: number) => {\n        kernel.subtract = blurOrSharpenCheckboxs[i].checked;\n        \n        switch (filterTypes[i].value) {\n            case \"gauss\":\n                kernel.initGauss(parseFloat(sigmas[i].value), parseFloat(sigmas2[i].value), parseFloat(kernelSizes[i].value));\n                break;\n            case \"boxBlur\":\n                kernel.initBoxKernel(parseFloat(kernelSizes[i].value));\n                break;\n            default:\n                console.log(\"Invalid filter type\");\n                break;\n        } \n    });\n    \n}\n\nfunction applyKernel() {\n    // Get data from imported image\n    const canvas = document.getElementById(\"Mycanvas\") as HTMLCanvasElement;\n    var context = canvas.getContext('2d');\n    var pixels = context!.getImageData(0, 0, canvas.width, canvas.height);\n\n    //filter.applyToImage(pixels);\n    illustrator.generatKernelGraph(filter.kernels);\n    illustrator.generatFrequencyGraph(pixels, parseInt(imageRowSlice!.value));\n\n    // Show the processed image\n    const canvas2 = document.getElementById(\"ProcessCanvas\") as HTMLCanvasElement;\n    var context = canvas2.getContext('2d');\n    context.putImageData(pixels, 0, 0);\n}\n*/\nfunction resetAllOptions() {\n    for (let i = 0; i < kernelSizes.length; i++) {\n        kernalSizesValues[i].value = \"0\";\n        kernelSizes[i].value = \"0\";\n    };\n\n    for (let i = 0; i < sigmas.length; i++) {\n        sigmaValues[i].value = \"0\";\n        sigmas[i].value = \"0\";\n    };\n\n    for (let i = 0; i < timeFiltersApllied.length; i++) {\n        timeFiltersAplliedValues[i].value = \"0\";\n        timeFiltersApllied[i].value = \"0\";\n    };\n    imageRowSliceValue!.value = \"0\";\n    imageRowSlice!.value = \"0\";\n\n    // Get data from imported image\n    const canvas = document.getElementById(\"Mycanvas\") as HTMLCanvasElement;\n    var context = canvas.getContext('2d');\n    var pixels = context!.getImageData(0, 0, canvas.width, canvas.height);\n\n    // Show the processed image\n    const canvas2 = document.getElementById(\"ProcessCanvas\") as HTMLCanvasElement;\n    var context = canvas2.getContext('2d');\n    context!.putImageData(pixels, 0, 0);\n}\n \ninit() "]}